<?xml version="1.0" encoding="UTF-8"?>
<!--
/* (c) 2014 Open Source Geospatial Foundation - all rights reserved
 * This code is licensed under the GPL 2.0 license, available at the root
 * application directory.
 */


-->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
	    	http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/aop       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
       default-autowire="byName">

	<context:annotation-config />
	
<!--	<aop:aspectj-autoproxy proxy-target-class="true"/>	-->

    <!--=====================================================================-->
    <!-- LDAP related stuff -->
    <!--=====================================================================-->

    <import resource="applicationContext-geofenceLdapDatasource.xml"/>
    
<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="false" />
        <property name="locations">
            <list>
                <value>classpath*:geofence-ldap.properties</value>                
            </list>
        </property>
	</bean>-->

	<bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="locations" value="classpath*:geofence-ldap-ovr.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>
	
    <bean id="geofenceLdapUserAttributesMapper" class="org.geoserver.geofence.ldap.dao.impl.GSUserAttributesMapper">
    	<property name="ldapAttributeMappings">
    		<map>
    			<!-- uidNumber is not supported on ADS, we use a fake field for id -->
    			<entry key="id" value="telephoneNumber"/>
    			<entry key="username" value="uid"/>
    			<entry key="email" value="mail"/>
    			<entry key="name" value="cn"/>
    			<entry key="surname" value="sn"/>    			
    			<entry key="password" value="userPassword"/>    			    		
    		</map>
    	</property>
    </bean>
    
    <bean id="geofenceLdapUserGroupAttributesMapper" class="org.geoserver.geofence.ldap.dao.impl.UserGroupAttributesMapper">
    	<property name="ldapAttributeMappings">
    		<map>
    			<!-- gidNumber is not supported on ADS, we use a fake field for id -->
    			<entry key="id" value="telephoneNumber"/>
    			<entry key="groupname" value="cn"/>
    			<entry key="member" value="memberUid"/>
    						
    		</map>
    	</property>
    </bean>
    
	<bean id="gsLdapUserDAO" class="org.geoserver.geofence.ldap.dao.impl.GSUserDAOLdapImpl">
		<property name="ldapTemplate" ref="geofenceLdapTemplate" />
		<property name="attributesMapper" ref="geofenceLdapUserAttributesMapper" />			
		<property name="groupsAttributesMapper" ref="geofenceLdapUserGroupAttributesMapper" />
	</bean>
	
	<bean id="ldapUserGroupDAO" class="org.geoserver.geofence.ldap.dao.impl.UserGroupDAOLdapImpl">
		<property name="ldapTemplate" ref="geofenceLdapTemplate" />
		<property name="attributesMapper" ref="geofenceLdapUserGroupAttributesMapper" />
		<property name="searchFilter" value="objectClass=groupOfNames"/>					
	</bean>
		
	
</beans>
